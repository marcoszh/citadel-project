{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the resources."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "accvm",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "osImageName": {
            "type": "string",
            "defaultValue": "2019-datacenter-gensecond",
            "allowedValues": [
                "2019-datacenter-gensecond",
                "2016-datacenter-gensecond",
                "18_04-lts-gen2",
                "16_04-lts-gen2"
            ],
            "metadata": {
                "description": "OS Image for the Virtual Machine"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "Password or ssh key for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DC1s_v2",
            "allowedValues": [
                "Standard_DC1s_v2",
                "Standard_DC2s_v2",
                "Standard_DC4s_v2",
                "Standard_DC8_v2"
            ],
            "metadata": {
                "description": "Size for the Virtual Machine."
            }
        },
        "virtualNetworkNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Determines whether or not a new virtual network should be provisioned."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "[concat(parameters('vmName'), '-vnet01')]",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "vnetPrefixes": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "VNET Adress Space"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Name of the subnet"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnet prefix of the virtual network"
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resource group for the existing virtual network"
            }
        },
        "inboundPorts": {
            "type": "string",
            "defaultValue": "disable",
            "allowedValues": [
                "enable",
                "disable"
            ],
            "metadata": {
                "description": "Select which virtual machine network ports are accessible from the public internet"
            }
        },
        "bootDiagnostics": {
            "type": "string",
            "defaultValue": "Disabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Determine whether or not to capture serial console output and screenshots of the virtual machine running on a host to help diagnose startup issues"
            }
        },
        "diagnosticsStorageNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Determines whether or not a new storage account for diagnostics should be provisioned."
            }
        },
        "diagnosticsStorageName": {
            "type": "string",
            "defaultValue": "[concat(parameters('vmName'), 'diag')]",
            "metadata": {
                "description": "Name of the storage account for diagnostics"
            }
        },
        "diagnosticsStorageResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resource group for the diagnostics storage account"
            }
        },
        "diagnosticsStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Diagnostics storage account type"
            }
        },
        "diagnosticsStorageKind": {
            "defaultValue": "Storage",
            "metadata": {
                "description": "Type of storage account."
            },
            "type": "string"
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "The type of OS Disk for the Virtual Machine"
            }
        }
    },
    "variables": {
        "imageReference": {
            "2019-datacenter-gensecond": {
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "sku": "2019-datacenter-gensecond",
                "version": "latest"
            },
            "2016-datacenter-gensecond": {
                "offer": "WindowsServer",
                "publisher": "MicrosoftWindowsServer",
                "sku": "2016-datacenter-gensecond",
                "version": "latest"
            },
            "18_04-lts-gen2": {
                "offer": "UbuntuServer",
                "publisher": "Canonical",
                "sku": "18_04-lts-gen2",
                "version": "latest"
            },
            "16_04-lts-gen2": {
                "offer": "UbuntuServer",
                "publisher": "Canonical",
                "sku": "16_04-lts-gen2",
                "version": "latest"
            }
        },
        "publicIPAddressName": "[concat(parameters('vmName'), '-ip')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "nsgName": "[concat(parameters('vmName'), '-nsg')]",
        "nicName": "[concat(parameters('vmName'), '-nic')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "[parameters('adminPasswordOrKey')]",
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                    }
                ]
            }
        },
        "windowsConfiguration": {
            "provisionVmAgent": "true"
        },
        "linuxSecurityRules": [
            {
                "name": "ssh",
                "properties": {
                    "access": "Allow",
                    "description": "Allow SSH",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22",
                    "direction": "Inbound",
                    "priority": 200,
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*"
                }
            }
        ],
        "windowsSecurityRules": [
            {
                "name": "rdp",
                "properties": {
                    "access": "Allow",
                    "description": "Allow RDP",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "3389",
                    "direction": "Inbound",
                    "priority": 200,
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*"
                }
            }
        ],
        "securityRules": "[if(contains(parameters('osImageName'), 'datacenter'), variables('windowsSecurityRules'), variables('linuxSecurityRules'))]"
    },
    "resources": [
        {
            "apiVersion": "2019-07-01",
            "name": "pid-97d58673-8b9b-5910-88a8-15dbd278db9a",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            },
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "2018-07-01",
            "condition": "[and(equals(parameters('diagnosticsStorageNewOrExisting'), 'new'), equals(parameters('bootDiagnostics'), 'Enabled'))]",
            "kind": "[parameters('diagnosticsStorageKind')]",
            "location": "[parameters('location')]",
            "name": "[parameters('diagnosticsStorageName')]",
            "sku": {
                "name": "[parameters('diagnosticsStorageType')]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('publicIPAddressName')]",
                "[parameters('virtualNetworkName')]",
                "[variables('nsgID')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
            "location": "[parameters('location')]",
            "name": "[parameters('virtualNetworkName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/virtualNetworks"
        },
        {
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "name": "[variables('nsgName')]",
            "properties": {
                "securityRules": "[if(equals(parameters('inboundPorts'), 'enable'), variables('securityRules'), json('null'))]"
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                    "windowsConfiguration": "[if(contains(parameters('osImageName'), 'datacenter'), variables('windowsConfiguration'), json('null'))]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')[parameters('osImageName')]]",
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[equals(parameters('bootDiagnostics'), 'enabled')]",
                        "storageUri": "[if(equals(parameters('bootDiagnostics'), 'enable'), reference(resourceId(parameters('diagnosticsStorageResourceGroupName'), 'Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageName')), '2018-02-01').primaryEndpoints['blob'], json('null'))]"
                    }
                }
            }
        }
    ]
}